{"name":"jQuery Energize","tagline":"jQuery Energize it is a jQuery plugin that will help javascript engineers to easily create UI Components on top of jQuery.","body":"### Welcome to jQuery Energize.\r\njQuery Energize is a javascript component built on top of jQuery library to easily create smart extensible UI Components.\r\n\r\n> jQuery Energize delivers expandable, reusable, simple UI Components Built on top of jQuery Library by using the DOM API.\r\n\r\n### Features\r\n* Support Data attribute to overwrite config parameters\r\n* Easily expose public methods for your component.\r\n* Avoiding overwriting existing components by using noConflict\r\n* Supporting Javascript OOP principles by using prototypes.\r\n* More importantly provides code consistency, simplicity and faster execution for writing UI Components.\r\n\r\n### Installation\r\nInsert the following script in the body tag\r\n```\r\n<script type=\"text/javascript\" src=\"jquery-energize.min.js\"></script>\r\n```\r\n\r\n### How to write a component\r\n```\r\n/* jshint expr: true */\r\n(function($){\r\n    \"use strict\";\r\n\r\n    /**\r\n     * @constructor\r\n     * @param {html-object/tag} element: selected DOM element\r\n     * @param {obj literal} config: merge of data attributes, component options, component settings\r\n     * @return {Comp obj}\r\n     */\r\n    function Comp(element, config){\r\n        /* ALL YOUR CODE GOES HERE*/\r\n        return this;\r\n    }\r\n\r\n    $.energize(\"comp_name\", Comp, {\r\n        /* Component Settings */\r\n    });\r\n\r\n})(window.jQuery);\r\n```\r\n\r\n### How to initialize a component\r\nyou can use jQuery DOM selector to query the dom and call your new component, you can also pass optional configuration object just like any jQuery Plugin\r\n```\r\n $(el).comp_name({\r\n        /* component options */\r\n });\r\n```\r\n\r\n### Duplicate component names\r\nif there are different components with the same name on your page you can always fallback to the old version by using no conflict\r\n```\r\n $.fn.comp_name.noConflict();\r\n $(el).comp_name({\r\n        /* component options */\r\n });\r\n```\r\n\r\n### Sample component\r\nWriting a jquery plugin that will change the color of DOM elements. \r\n\r\n\r\n####JS File - jQuery.colorify.js component\r\n\r\n```\r\n/* jshint expr: true */\r\n(function($){\r\n    \"use strict\";\r\n\r\n    function Colorify(element, config){\r\n        this.config = config;\r\n        $(element).css(\"color\", this.config.color);\r\n        return this;\r\n    }\r\n\r\n    //shared public method\r\n    Colorify.prototype.getColor = function(){\r\n        return this.config.color;\r\n    };\r\n\r\n    $.energize(\"colorify\", Colorify, {\r\n        color: \"pink\" //default color - if there is no color specified.\r\n    });\r\n\r\n})(window.jQuery);\r\n```\r\n\r\n\r\n#### HTML File\r\n\r\nwe have used data attribute for configurations, you can always override it by passing option parameters to your component.\r\n```\r\n<!doctype>\r\n<html>\r\n    <head>\r\n        <style type=\"text/css\">\r\n        .color{\r\n            height: 50px;\r\n            width:  50px;\r\n            display: block;\r\n            text-align: center;\r\n            line-height: 50px;\r\n            font-size: 23px;\r\n        }\r\n        </style>\r\n        <script src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js\"></script>\r\n        <script src=\"../../0.0.1/jquery-energize.js\"></script>\r\n        <script src=\"jquery.colorify.js\"></script> \r\n    </head>\r\n\r\n    <body>\r\n        <div>\r\n            <div class=\"color\" data-colorify-color=\"red\">red</div>\r\n            <div class=\"color\" data-colorify-color=\"blue\">blue</div>\r\n            <div class=\"color\">Default is pink</div>\r\n        </div>\r\n\r\n        <script type=\"text/javascript\">\r\n        $(document).ready(function(){\r\n            //$.fn.colorify.noConflict();\r\n            $(\".color\").colorify();\r\n\r\n            $(\".color\").colorify(\"getColor\", function(color){\r\n                console.log(color, \" is back\");\r\n            });\r\n        });\r\n        </script>\r\n    </body>\r\n</html>\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}